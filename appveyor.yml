#version: "0.1.0.{build}"
environment:
  matrix:
  - TARGET: nightly-x86_64-pc-windows-msvc
  #- TARGET: nightly-i686-pc-windows-msvc
  #- TARGET: nightly-x86_64-pc-windows-gnu
  #- TARGET: nightly-i686-pc-windows-gnu
install:
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-${env:TARGET}.exe" -FileName "rust-install.exe"
  - ps: .\rust-install.exe /VERYSILENT /NORESTART /DIR="C:\rust" | Out-Null
  - ps: $env:PATH="$env:PATH;C:\rust\bin"
  - rustc -vV
  - cargo -vV
  - erase rust-install.exe
build_script:
  - cargo build
  # Skip packaging step while we're running off a local winapi build
  #- cargo package
skip_commits:
  files:
    - README.md
    - .travis.yml
deploy:
  artifact: target\debug\miditran.exe
  auth_token:
    secure: kKeVzQQ8Mhx3gMQENTiGqGtDECO2xmPBGrnp7cn92MstDcL14Pkzrbvl7Yr/fI3b
  description: 'Automated release'
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    RUST_VERSION: stable
    appveyor_repo_tag: true
  provider: GitHub
branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
notifications:
  - provider: Email
    on_build_success: false